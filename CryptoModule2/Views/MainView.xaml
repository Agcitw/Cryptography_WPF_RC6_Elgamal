<Window x:Class="CryptoModule2.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:CryptoModule2.ViewModels"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:converters="clr-namespace:CryptoModule2.Views.Converters"
        mc:Ignorable="d"
        Title="Cryptography" Height="650" Width="1150" MinHeight="650" MinWidth="1150">
    <Window.Resources>
        <system:Boolean x:Key="True">True</system:Boolean>
        <system:Boolean x:Key="False">False</system:Boolean>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <Style TargetType="RadioButton">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="1" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="IsEnabled"
                    Value="{Binding IsDoingCipher, Converter={StaticResource InverseBooleanConverter}}" />
            <Setter Property="Width" Value="200" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="Background" Value="LightSteelBlue" />
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Width" Value="300" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Background" Value="WhiteSmoke" />
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style TargetType="StackPanel">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
    </Window.Resources>
    <Window.Content>
        <TabControl>
            <TabItem Header="RC6" Width="200" Background="AliceBlue">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>File:</Label>
                        <TextBox VerticalAlignment="Center" TextWrapping="Wrap" x:Name="FileName" IsReadOnly="True" />
                        <Button Content="..." Click="ChooseFile" Width="30" Margin="0" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Cipher mode:" />
                        <RadioButton GroupName="Encryption_Mode" Content="ECB" IsChecked="True" />
                        <RadioButton GroupName="Encryption_Mode" Content="CBC"
                                     Command="{Binding RadioCommand, UpdateSourceTrigger=PropertyChanged}" />
                        <RadioButton GroupName="Encryption_Mode" Content="CFB"
                                     Command="{Binding RadioCommand, UpdateSourceTrigger=PropertyChanged}" />
                        <RadioButton GroupName="Encryption_Mode" Content="OFB"
                                     Command="{Binding RadioCommand, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Key length:" />
                        <RadioButton GroupName="Key_Length" Content="128" x:Name="Key128"
                                     Checked="KeyChecked_OnChecked" />
                        <RadioButton GroupName="Key_Length" Content="192" x:Name="Key192"
                                     Checked="KeyChecked_OnChecked" />
                        <RadioButton GroupName="Key_Length" Content="256" x:Name="Key256"
                                     Checked="KeyChecked_OnChecked" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Key:" />
                        <PasswordBox x:Name="KeyTextBox" MinWidth="300" VerticalAlignment="Center" />
                        <Button Width="30" Margin="0" Click="UpdateKey_OnClick">Upd</Button>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="IV:" />
                        <PasswordBox VerticalAlignment="Center" MinWidth="300" Name="IvTextBox" />
                        <Button HorizontalAlignment="Center" VerticalAlignment="Center" Width="30" Margin="0" Click="ShowPasswordCheck_OnChecked">Show</Button>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Encrypt" Click="Encrypt" />
                        <Button Content="Decrypt" Click="Decrypt" />
                    </StackPanel>
                    <ProgressBar Height="4" x:Name="ProgressBar" />
                </StackPanel>
            </TabItem>
            <TabItem Header="Elgamal" Width="200" Background="AliceBlue">
                <TabItem.DataContext>
                    <viewmodels:ElgamalVm />
                </TabItem.DataContext>
                <Grid Background="AliceBlue">
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="4*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <GridSplitter Grid.Row="0" Grid.Column="0" Width="5" Background="LightSteelBlue" />
                        <GridSplitter Grid.Row="0" Grid.Column="1" Width="5" Background="LightSteelBlue" />
                        <Grid Grid.Column="0" Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="200" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="70" />
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0">
                                <Label Content="Alice" />
                                <TextBlock Text="Private key" />
                                <TextBox IsReadOnly="True"
                                         Text="{Binding AliceKey.PrivateKey.Key, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock Text="Public key" />
                                <TextBox IsReadOnly="True"
                                         Text="{Binding AliceKey.PublicKey.Key, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                <Button Content="Refresh keys"
                                        Command="{Binding GenerateKeyCommand}"
                                        CommandParameter="{StaticResource True}" />
                                <TextBlock Text="Mes. to encrypt and send/decrypted received mes." />
                            </StackPanel>
                            <TextBox TextWrapping="Wrap"
                                     AcceptsReturn="True"
                                     AcceptsTab="True"
                                     Text="{Binding AliceText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     MaxLength="10000"
                                     Grid.Row="1" />
                            <Button Grid.Row="2" Content="Send message to Bob"
                                    Command="{Binding SendMessageCommand}"
                                    CommandParameter="{StaticResource True}" />
                        </Grid>
                        <Grid Grid.Column="1" Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="200" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="70" />
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0">
                                <Label Content="Public parameters" />
                                <TextBlock Text="P" />
                                <TextBox IsReadOnly="True"
                                         Text="{Binding Parameters.P, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock Text="G" />
                                <TextBox IsReadOnly="True"
                                         Text="{Binding Parameters.G, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                <Button Content="Refresh public parameters"
                                        Command="{Binding GenerateParametersCommand}" />
                                <TextBlock Text="Encrypted message" />
                            </StackPanel>
                            <TextBox IsReadOnly="True"
                                     Grid.Row="1"
                                     TextWrapping="Wrap"
                                     AcceptsReturn="True"
                                     AcceptsTab="True"
                                     Text="{Binding CipherText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                        <Grid Grid.Column="2" Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="200" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="70" />
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0">
                                <Label Content="Bob" />
                                <TextBlock Text="Private key" />
                                <TextBox IsReadOnly="True"
                                         Text="{Binding BobKey.PrivateKey.Key, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock Text="Public key" />
                                <TextBox IsReadOnly="True"
                                         Text="{Binding BobKey.PublicKey.Key, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                <Button Content="Refresh keys"
                                        Command="{Binding GenerateKeyCommand}"
                                        CommandParameter="{StaticResource False}" />
                                <TextBlock Text="Mes. to encrypt and send/decrypted mes." />
                            </StackPanel>
                            <TextBox TextWrapping="Wrap"
                                     AcceptsReturn="True"
                                     AcceptsTab="True"
                                     Text="{Binding BobText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     MaxLength="10000"
                                     Grid.Row="1" />
                            <StackPanel Grid.Row="2">
                                <Button Content="Send message to Alice"
                                        Command="{Binding SendMessageCommand}"
                                        CommandParameter="{StaticResource False}" />
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Background="LightBlue">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0">
                                <Button Content="Encrypt file for Bob"
                                        Command="{Binding EncryptFileCommand}"
                                        CommandParameter="{StaticResource True}" />
                                <Button Content="Decrypt received file"
                                        Command="{Binding DecryptFileCommand}"
                                        CommandParameter="{StaticResource True}" />
                            </StackPanel>
                            <Grid Grid.Column="1">
                                <Label Content="Progress of en/decrypting file" />
                                <ProgressBar VerticalAlignment="Center"
                                             Margin="10"
                                             Height="25"
                                             Value="{Binding CurrentProgress, Mode=OneWay}" />
                            </Grid>
                            <StackPanel Grid.Column="2">
                                <Button Content="Encrypt file for Alice"
                                        Command="{Binding EncryptFileCommand}"
                                        CommandParameter="{StaticResource False}" />
                                <Button Content="Decrypt received message"
                                        Command="{Binding DecryptFileCommand}"
                                        CommandParameter="{StaticResource False}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
    </Window.Content>
</Window>